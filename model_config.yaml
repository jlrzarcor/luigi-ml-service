grid_config:
    sklearn.ensemble.RandomForestClassifier:
        n_estimators: [100, 500, 1000]
        criterion: [gini]
        max_depth: [5, 10, 20, 30, 50]
        max_features: [sqrt, log2, 1.0]
        min_samples_split: [5, 10, 20]
        n_jobs: [2]
    # catwalk's custom model wrapper ScaledLogisticRegression will
    # automatically scale the train data prior to fitting the model
    # and then use the same scaling for the test data
    # triage.component.catwalk.estimators.classifiers.ScaledLogisticRegression:
        # penalty: ['l1', 'l2']
        # C: [0.0001, 0.001, 0.01, 0.1]
    sklearn.tree.DecisionTreeClassifier:
        max_depth: [1, 2]
        min_samples_split: [5, 10, 20]
    # sklearn.neural_network.MLPClassifier:
    #     activation: ['tanh', 'relu', 'logistic']
    #     alpha: [0.0001, 0.001, 0.01]


evaluation_config:
    metrics: [precision@, recall@, roc_auc]
    parameters: [20, all]


label_config:
    label_column: [status]
